import{k as p,r as c,s as n}from"./index-CAsyng-G.js";const S=()=>{const{user:a}=p(),[h,w]=c.useState([]),[s,d]=c.useState(null),[b,z]=c.useState([]),[y,l]=c.useState(!0);c.useEffect(()=>{a&&g()},[a]);const g=async()=>{try{l(!0);const{data:e,error:r}=await n.from("organization_members").select("organization_id").eq("user_id",a==null?void 0:a.id).eq("status","active");if(r)throw r;if(e&&e.length>0){const t=e.map(u=>u.organization_id),{data:o,error:i}=await n.from("organizations").select("*").in("id",t);if(i)throw i;w(o||[]),o&&o.length>0&&d(o[0])}}catch(e){console.error("Error fetching organizations:",e)}finally{l(!1)}},m=async e=>{try{const{data:r,error:t}=await n.from("organization_members").select("*").eq("organization_id",e).order("joined_at",{ascending:!0});if(t)throw t;z(r||[])}catch(r){console.error("Error fetching org members:",r)}};return{organizations:h,currentOrg:s,setCurrentOrg:d,members:b,loading:y,fetchUserOrganizations:g,fetchOrgMembers:m,createOrganization:async e=>{try{const{data:r,error:t}=await n.from("organizations").insert([e]).select().single();if(t)throw t;return await g(),{data:r,error:null}}catch(r){return{data:null,error:r}}},inviteMember:async(e,r,t)=>{try{const o=crypto.randomUUID(),i=new Date;i.setDate(i.getDate()+7);const{data:u,error:f}=await n.from("organization_invites").insert([{organization_id:e,email:r,invited_by:a==null?void 0:a.id,role:t,token:o,expires_at:i.toISOString()}]).select().single();if(f)throw f;return{data:u,error:null}}catch(o){return{data:null,error:o}}},removeMember:async e=>{try{const{error:r}=await n.from("organization_members").delete().eq("id",e);if(r)throw r;return s&&await m(s.id),{error:null}}catch(r){return{error:r}}},updateMemberRole:async(e,r)=>{try{const{error:t}=await n.from("organization_members").update({role:r}).eq("id",e);if(t)throw t;return s&&await m(s.id),{error:null}}catch(t){return{error:t}}}}};export{S as u};
