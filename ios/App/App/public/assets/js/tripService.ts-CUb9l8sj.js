import{s as r}from"../index-C69Cv9fm.js";import{d as t}from"./chunk-DGLf2uCM.js";import{t as e}from"./chunk-wPum6LLk.js";import"./chunk-DE8J_P3a.js";import"./chunk-CHPtWMTz.js";import"./chunk-DN5ISW2H.js";import"./chunk-CbEMFF6w.js";const a={async createTrip(t){try{const{data:{user:e}}=await r.auth.getUser();if(!e)throw new Error("No authenticated user");if(!e.id)throw new Error("Invalid user state - missing ID");const{data:a,error:i}=await r.functions.invoke("create-trip",{body:{name:t.name,description:t.description,destination:t.destination,start_date:t.start_date,end_date:t.end_date,trip_type:t.trip_type||"consumer",cover_image_url:t.cover_image_url}});if(i)throw i;if(!(null==a?void 0:a.success))throw new Error((null==a?void 0:a.error)||"Failed to create trip");return a.trip}catch(e){return null}},async getUserTrips(a){try{if(a??await t.isDemoModeEnabled()){return e.map(r=>{let t,e;if(r.dateRange)try{const a=r.dateRange.split(" - ");if(2===a.length){const r=a[1].match(/\d{4}/),i=r?r[0]:(new Date).getFullYear().toString(),n=a[0].trim(),o=a[1].replace(/,?\s*\d{4}/,"").trim(),s={Jan:"01",Feb:"02",Mar:"03",Apr:"04",May:"05",Jun:"06",Jul:"07",Aug:"08",Sep:"09",Oct:"10",Nov:"11",Dec:"12"},c=r=>{const t=r.match(/([A-Za-z]{3})\s+(\d{1,2})/);if(t){const r=s[t[1]]||"01",e=t[2].padStart(2,"0");return`${i}-${r}-${e}`}};t=c(n),e=c(o)}}catch(o){}return{id:String(r.id),name:r.title,description:r.description,start_date:t,end_date:e,destination:r.location,cover_image_url:"string"==typeof r.coverPhoto?r.coverPhoto:"",created_by:"demo-user",created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),is_archived:r.archived||!1,trip_type:r.trip_type||"consumer",basecamp_name:void 0,basecamp_address:void 0}})}const{data:{user:i}}=await r.auth.getUser();if(!i)return[];const{data:n,error:o}=await r.from("trips").select("*").eq("created_by",i.id).eq("is_archived",!1).order("created_at",{ascending:!1});if(o)throw o;return n||[]}catch(i){return[]}},async getTripById(t){try{const{data:e,error:a}=await r.from("trips").select("*").eq("id",t).single();if(a)throw a;return e}catch(e){return null}},async updateTrip(t,e){try{const{error:a}=await r.from("trips").update(e).eq("id",t);return!a}catch(a){return!1}},async archiveTrip(t){try{const{error:e}=await r.from("trips").update({is_archived:!0}).eq("id",t);return!e}catch(e){return!1}},async getTripMembers(t){try{const{data:e,error:a}=await r.from("trip_members").select("\n          id,\n          user_id,\n          role,\n          created_at,\n          profiles:user_id (\n            display_name,\n            avatar_url,\n            email\n          )\n        ").eq("trip_id",t);if(a)throw a;return e||[]}catch(e){return[]}},async addTripMember(t,e,a="member"){try{const{error:i}=await r.from("trip_members").insert({trip_id:t,user_id:e,role:a});return!i}catch(i){return!1}}};export{a as tripService};
